{
    "creation_time": "2022-06-03T13:36:33.431701",
    "entries": [
        {
            "description": "A quickstart pipeline that trains some simple models in parallel.",
            "forks_count": 8,
            "owner": "orchest",
            "stargazers_count": 10,
            "tags": [
                "quickstart",
                "machine-learning",
                "training",
                "scikit-learn"
            ],
            "title": "Quickstart Pipeline",
            "url": "https://github.com/orchest/quickstart"
        },
        {
            "description": "A minimal example of how to use a fileystem based global key value store, it uses a simple Python dictionary with SQLite as the backing store.",
            "forks_count": 0,
            "owner": "orchest-examples",
            "stargazers_count": 0,
            "tags": [
                "utility"
            ],
            "title": "Global Key Value store",
            "url": "https://github.com/orchest-examples/global-key-value-store"
        },
        {
            "description": "Use dbt inside of Orchest for your materialized views.",
            "forks_count": 1,
            "owner": "ricklamers",
            "stargazers_count": 1,
            "tags": [
                "python",
                "dbt",
                "sql"
            ],
            "title": "Orchest + dbt",
            "url": "https://github.com/ricklamers/orchest-dbt"
        },
        {
            "description": "Use Image Super-Resolution (ISR) to enhance any image with different methods.",
            "forks_count": 3,
            "owner": "fruttasecca",
            "stargazers_count": 2,
            "tags": [
                "python",
                "super-resolution",
                "machine-learning",
                "computer-vision"
            ],
            "title": "Image Super-Resolution",
            "url": "https://github.com/fruttasecca/image_super_resolution"
        },
        {
            "description": "Generate an audio snippet from a text sample and send it as a message on Slack/Discord.",
            "forks_count": 4,
            "owner": "ricklamers",
            "stargazers_count": 6,
            "tags": [
                "tts",
                "audio",
                "machine-learning"
            ],
            "title": "Coqui TTS",
            "url": "https://github.com/ricklamers/orchest-coqui-tts"
        },
        {
            "description": "An example of how to use Redis and Postgres in an Orchest pipeline.",
            "forks_count": 2,
            "owner": "ricklamers",
            "stargazers_count": 0,
            "tags": [
                "postgres",
                "services"
            ],
            "title": "Redis and Postgres",
            "url": "https://github.com/ricklamers/orchest-redis-postgres"
        },
        {
            "description": "Search scraped comments with semantic vector search.",
            "forks_count": 0,
            "owner": "ricklamers",
            "stargazers_count": 5,
            "tags": [
                "nlp",
                "streamlit",
                "search",
                "scraping"
            ],
            "title": "Weaviate + Orchest",
            "url": "https://github.com/ricklamers/orchest-weaviate-tweakers-search"
        },
        {
            "description": "An example pipeline showing how to use multiple languages in a same Orchest pipeline.",
            "forks_count": 1,
            "owner": "ricklamers",
            "stargazers_count": 2,
            "tags": [
                "environments",
                "julia",
                "r",
                "python"
            ],
            "title": "Polyglot: Python, Julia and R in one pipeline",
            "url": "https://github.com/ricklamers/orchest-multi-language-pipeline"
        },
        {
            "description": "A pipeline that uses the open source Photon library for webscraping. Use this as a starting point for a data ingest pipeline.",
            "forks_count": 2,
            "owner": "ricklamers",
            "stargazers_count": 0,
            "tags": [
                "scraping"
            ],
            "title": "Web Scraping using Photon",
            "url": "https://github.com/ricklamers/photon-orchest-pipeline"
        },
        {
            "description": "Use web scraping, Meilisearch and PyWebIO for lightning fast comment search on HN.",
            "forks_count": 2,
            "owner": "ricklamers",
            "stargazers_count": 2,
            "tags": [
                "python",
                "pywebio",
                "scraping"
            ],
            "title": "Search HN comments with PyWebIO",
            "url": "https://github.com/ricklamers/orchest-meilisearch-pywebio-hn"
        },
        {
            "description": "A pipeline showcasing how Python and R can be used within the same pipeline. It also shows how you can call the Orchest SDK from within R.",
            "forks_count": 1,
            "owner": "orchest-examples",
            "stargazers_count": 0,
            "tags": [
                "r",
                "python"
            ],
            "title": "Mixing R and Python in one pipeline",
            "url": "https://github.com/orchest-examples/orchest-pipeline-r-python-mix"
        },
        {
            "description": "An example pipeline that uses PyCall to be able to call the Orchest SDK from within Julia.",
            "forks_count": 2,
            "owner": "orchest-examples",
            "stargazers_count": 0,
            "tags": [
                "julia"
            ],
            "title": "Calling the Orchest SDK from Julia",
            "url": "https://github.com/orchest-examples/julia-orchest-sdk"
        },
        {
            "description": "Specific example of using the QuickBooks OAuth API in Orchest, but can be used for any OAuth 2.0 authentication flow.",
            "forks_count": 2,
            "owner": "ricklamers",
            "stargazers_count": 0,
            "tags": [
                "python",
                "oauth",
                "finance"
            ],
            "title": "OAuth QuickBooks example project",
            "url": "https://github.com/ricklamers/orchest-quickbooks-oauth"
        },
        {
            "description": "This is an example project that demonstrates how to create a pipeline that consists of two phases of execution.",
            "forks_count": 2,
            "owner": "ricklamers",
            "stargazers_count": 1,
            "tags": [
                "python",
                "streamlit"
            ],
            "title": "Two phase pipeline + Streamlit",
            "url": "https://github.com/ricklamers/two-phase-pipeline-streamlit"
        },
        {
            "description": "This pipeline classifies random text paragraphs found on websites linked to from random Wikipedia pages.",
            "forks_count": 1,
            "owner": "ricklamers",
            "stargazers_count": 0,
            "tags": [
                "python",
                "scraping",
                "streamlit"
            ],
            "title": "Scraped language classifier",
            "url": "https://github.com/ricklamers/orchest-language-classifier"
        },
        {
            "description": "Use popular python library, Deep_AutoViML to build multiple deep learning Keras models on any dataset, any size with this pipeline. Data must be in data folder and models are saved in your project folder.",
            "forks_count": 2,
            "owner": "rsesha",
            "stargazers_count": 3,
            "tags": [
                "quickstart",
                "keras",
                "machine-learning",
                "tensorflow"
            ],
            "title": "Deep_AutoViML Pipeline",
            "url": "https://github.com/rsesha/deep_autoviml_pipeline"
        },
        {
            "description": "Use popular python library, AutoViz to visualize any dataset, any size with this pipeline. Data must be in data folder and charts are saved in AutoViz_Plots fodler.",
            "forks_count": 3,
            "owner": "rsesha",
            "stargazers_count": 3,
            "tags": [
                "quickstart",
                "auto-visualization",
                "machine-learning"
            ],
            "title": "AutoViz Pipeline",
            "url": "https://github.com/rsesha/autoviz_pipeline"
        },
        {
            "description": "Spin up a Coiled cluster and run an xgboost train loop on it. Separate Coiled cluster creation step to make it re-usable.",
            "forks_count": 0,
            "owner": "ricklamers",
            "stargazers_count": 0,
            "tags": [
                "dask",
                "coiled",
                "xgboost",
                "machine-learning"
            ],
            "title": "Orchest + Coiled: spawn cluster and run XGBoost",
            "url": "https://github.com/ricklamers/orchest-coiled-cluster-xgboost"
        },
        {
            "description": "Experimenting with PyArrow in Orchest",
            "forks_count": 0,
            "owner": "astrojuanlu",
            "stargazers_count": 2,
            "tags": [
                "arrow",
                "pyarrow"
            ],
            "title": "Experimenting with PyArrow",
            "url": "https://github.com/astrojuanlu/orchest-pyarrow"
        },
        {
            "description": "Out-of-core processing with Vaex in Orchest",
            "forks_count": 0,
            "owner": "astrojuanlu",
            "stargazers_count": 0,
            "tags": [
                "vaex",
                "parquet"
            ],
            "title": "Out-of-core processing with Vaex",
            "url": "https://github.com/astrojuanlu/orchest-vaex"
        },
        {
            "description": "Connecting to an external database using SQLAlchemy",
            "forks_count": 0,
            "owner": "astrojuanlu",
            "stargazers_count": 0,
            "tags": [
                "sqlalchemy",
                "postgresql",
                "databases"
            ],
            "title": "Connecting to an external database using SQLAlchemy",
            "url": "https://github.com/astrojuanlu/orchest-sqlalchemy"
        },
        {
            "description": "Reading +1M Stack Overflow questions with Polars",
            "forks_count": 0,
            "owner": "astrojuanlu",
            "stargazers_count": 2,
            "tags": [
                "polars",
                "dataframes",
                "pandas"
            ],
            "title": "Reading +1M Stack Overflow questions with Polars",
            "url": "https://github.com/astrojuanlu/orchest-polars"
        }
    ]
}